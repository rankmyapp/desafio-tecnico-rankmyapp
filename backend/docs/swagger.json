{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Documentação da API REST para o desafio da RankMyApp",
        "title": "API - Desafio RankMyApp",
        "contact": {
            "name": "Otavio Martins",
            "email": "taviomartins01@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "description": "Endpoint de health check para confirmar se a API está rodando",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Verifica o status da API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets/buy": {
            "post": {
                "description": "Registra uma venda e publica na fila de validação via RabbitMQ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Realiza a compra de um ticket",
                "parameters": [
                    {
                        "description": "Informações da venda (somente pagamento com cartão de crédito)",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sale.ProcessSaleInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sale.ProcessSaleOutput"
                        }
                    },
                    "400": {
                        "description": "Payload inválido (JSON malformado)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Erro ao processar venda (falta de estoque, ticket inexistente, etc)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tickets/catalog": {
            "get": {
                "description": "Retorna todos os ingressos cujo estoque seja maior que zero",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista o catálogo de tickets disponíveis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ticket.TicketOutput"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar catálogo de tickets",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "sale.ProcessSaleInput": {
            "type": "object",
            "required": [
                "paymentType",
                "ticketId",
                "userId"
            ],
            "properties": {
                "paymentType": {
                    "type": "string"
                },
                "ticketId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "sale.ProcessSaleOutput": {
            "type": "object",
            "properties": {
                "paymentType": {
                    "type": "string"
                },
                "saleId": {
                    "type": "string"
                },
                "ticketId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "ticket.TicketOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}